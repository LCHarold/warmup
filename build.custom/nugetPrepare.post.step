<?xml version="1.0" encoding="utf-8" ?>
<project name="nugetPrepare" default="go">
  <!-- Project UppercuT - http://projectuppercut.org -->
  <!-- DO NOT EDIT THIS FILE - Add custom tasks in BuildTasks.Custom folder with file by the same name - find out more at http://uppercut.pbwiki.com -->
  <property name="build.config.settings" value="__NONE__" overwrite="false" />
  <include buildfile="${build.config.settings}" if="${file::exists(build.config.settings)}" />
  <property name="path.separator" value="${string::trim(path::combine(' ', ' '))}" />
  <property name="file.current.no_extension" value="nugetPrepare" />
  <property name="dirs.current" value="${directory::get-parent-directory(project::get-buildfile-path())}" />
  <property name="path.to.toplevel" value=".." />
  <property name="project.name" value="app" overwrite="false" />
  <property name="folder.build_scripts" value="build" overwrite="false" />
  <property name="folder.build_scripts_custom" value="build.custom" overwrite="false" />
  <property name="dirs.build_scripts_custom" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.build_scripts_custom}" />
  <property name="folder.code_build" value="build_output" overwrite="false" />
  <property name="dirs.build" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.code_build}" />
  <property name="folder.code_drop" value="code_drop" overwrite="false" />
  <property name="dirs.drop" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.code_drop}" overwrite="false" />
  <property name="folder.build_artifacts" value="build_artifacts" overwrite="false" />
  <property name="folder.app.drop" value="${project.name}" overwrite="false" />
  <property name="folder.database" value="__DATABASE_FOLDER_NAME__" overwrite="false" />
  <property name="folder.reports" value="${project.name}.Reports" overwrite="false" />
  <property name="folder.file_server" value="file.server" overwrite="false" />
  <property name="folder.environment_files" value="environment.files" overwrite="false" />
  <property name="folder.deployment" value="deployment" overwrite="false" />
  <property name="folder.settings" value="settings" overwrite="false" />
  <property name="folder.documentation" value="docs" overwrite="false" />
  <property name="folder.nuget" value="nuget" overwrite="false" />
  <property name="dirs.nuget" value="${path.to.toplevel}${path.separator}${folder.nuget}" overwrite="false" />
  <property name="dirs.drop.nuget" value="${dirs.drop}${path.separator}${folder.nuget}" overwrite="false" />
  <property name="folder.nuget.exists" value="${directory::exists(dirs.nuget)}" />
  <property name="version.use_semanticversioning" value="false" overwrite="false" />
  <property name="version.major" value="1" overwrite="false" />
  <property name="version.minor" value="0" overwrite="false" />
  <property name="version.patch" value="0" overwrite="false" />
  <property name="version.build" value="0" overwrite="false" />
  <property name="version.revision" value="0" overwrite="false" />
  <property name="assembly.version.full" value="${version.major}.${version.minor}.${version.build}.${version.revision}" />
  <property name="assembly.version.full" value="${version.major}.${version.minor}.${version.patch}.0"  if="${version.use_semanticversioning}" />
  <property name="file.nuget.version" value="${dirs.drop.nuget}${path.separator}version.xml" />

  <target name="go" depends="run_tasks" if="${folder.nuget.exists}" />

  <target name="run_tasks"
          depends="rename_lib_to_bin"
          description="Packaging nuget." />


  <target name="rename_lib_to_bin">
    <echo message="Moving contents of lib to bin ${dirs.drop.nuget}."/>
    <copy todir="${dirs.drop.nuget}\bin">
      <fileset basedir="${dirs.drop.nuget}\lib">
        <include name="**/**" />
      </fileset>
    </copy>
    
    <delete dir="${dirs.drop.nuget}\lib" failonerror="false" />
  </target>
  
</project>